# This file was generated by src/compile_regression_suite.sh from https://github.com/cburgmer/json-path-comparison/
# You probably don't want to change this manually but rather trigger a rebuild in the upstream source.

implementation: Clojure_json-path
queries:
  - id: array_index_dot_notation
    status: open
    result: null
  - id: array_index_slice_end_out_of_bounds
    status: fail
    result: "second"
  - id: array_index_slice_last_no_end
    status: fail
    result: "third"
  - id: array_index_slice_negative_step
    status: open
    result: "forth"
  - id: array_index_slice_no_start_no_end
    status: error
  - id: array_index_slice_only_end
    status: fail
    result: "third"
  - id: array_index_slice_only_start
    status: fail
    result: "second"
  - id: array_index_slice_start_end
    status: fail
    result: "second"
  - id: array_index_slice_start_end_negative_step
    status: open
    result: "forth"
  - id: array_index_slice_start_end_step
    status: fail
    result: "first"
  - id: array_index_slice_start_end_step_0
    status: open
    result: "first"
  - id: array_index_slice_start_end_step_1
    status: fail
    result: "first"
  - id: array_index_slice_start_end_step_non_aligned
    status: fail
    result: "first"
  - id: array_index_slice_start_equals_end
    status: fail
    result: "first"
  - id: array_index_slice_start_plus_one
    status: fail
    result: "first"
  - id: array_index_slice_step
    status: fail
    result: "third"
  - id: array_index_union
    status: fail
    result: "first"
  - id: filter_current_object_with_value
    status: open
    result: ["some value", "value"]
  - id: filter_equal
    status: fail
    result: [{"some": "value"}]
  - id: filter_greater_than_or_equal
    status: error
  - id: filter_less_than
    status: error
  - id: filter_less_than_on_string
    status: error
  - id: filter_less_than_or_equal
    status: error
  - id: filter_null
    status: open
    result: [{"some": "some value"}, {"key": null}]
  - id: filter_with_boolean_operation
    status: open
    result: [{"key": 43}, {"key": 44}]
  - id: filter_with_value_on_null
    status: open
    result: [{"key": "value"}]
  - id: filter_without_value
    status: open
    result: [{"key": "value"}]
  - id: key_bracket_notation
    status: error
  - id: key_bracket_notation_union
    status: error
  - id: key_bracket_notation_union_with_key_on_nested_objects
    status: error
  - id: key_bracket_notation_with_at_literal
    status: error
  - id: key_bracket_notation_with_dollar_literal
    status: error
  - id: key_bracket_notation_with_dot
    status: error
  - id: key_bracket_notation_with_dot_without_quotes
    status: error
  - id: key_bracket_notation_with_double_quotes
    status: error
  - id: key_bracket_notation_with_number
    status: error
  - id: key_bracket_notation_with_number_without_quotes
    status: error
  - id: key_bracket_notation_with_single_quote
    status: error
  - id: key_bracket_notation_with_single_quote_escaped
    status: error
  - id: key_bracket_notation_with_special_characters
    status: error
  - id: key_bracket_notation_with_star_literal
    status: fail
    result: ["value", "entry"]
  - id: key_bracket_notation_without_quotes
    status: error
  - id: key_dot_bracket_notation
    status: error
  - id: key_dot_bracket_notation_with_double_quotes
    status: error
  - id: key_dot_bracket_notation_without_quotes
    status: error
  - id: key_dot_notation_with_double_quotes
    status: open
    result: null
  - id: key_dot_notation_with_single_quotes
    status: open
    result: "value"
  - id: recursive_array_index
    status: error
  - id: recursive_key_with_double_quotes
    status: open
    result: []
  - id: recursive_key_with_single_quotes
    status: open
    result: ["russian dolls", "something", "top", "value", {"key": "russian dolls"}]
  - id: recursive_wildcard_on_null_value_array
    status: fail
    result: [40, 42]
  - id: recursive_wildcard_on_scalar
    status: open
    result: []
  - id: script_expression
    status: error
