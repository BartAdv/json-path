# This file was generated by src/compile_regression_suite.sh from https://github.com/cburgmer/json-path-comparison/
# You probably don't want to change this manually but rather trigger a rebuild in the upstream source.

implementation: Clojure_json-path
queries:
  - id: array_index
    selector: $[2]
    document: ["first", "second", "third", "forth", "fifth"]
    result: "third"
    status: pass
  - id: array_index_dot_notation
    selector: $.2
    document: ["first", "second", "third", "forth", "fifth"]
    result: null
    status: open
  - id: array_index_slice_end_out_of_bounds
    selector: $[1:10]
    document: ["first", "second", "third"]
    result: "second"
    status: fail
    consensus: ["second", "third"]
  - id: array_index_slice_only_end
    selector: $[:2]
    document: ["first", "second", "third", "forth", "fifth"]
    result: "third"
    status: fail
    consensus: ["first", "second"]
  - id: array_index_slice_only_start
    selector: $[1:]
    document: ["first", "second", "third", "forth", "fifth"]
    result: "second"
    status: fail
    consensus: ["second", "third", "forth", "fifth"]
  - id: array_index_slice_start_end
    selector: $[1:3]
    document: ["first", "second", "third", "forth", "fifth"]
    result: "second"
    status: fail
    consensus: ["second", "third"]
  - id: array_index_slice_start_end_step
    selector: $[0:3:2]
    document: ["first", "second", "third", "forth", "fifth"]
    result: "first"
    status: fail
    consensus: ["first", "third"]
  - id: array_index_slice_start_end_step_0
    selector: $[0:3:0]
    document: ["first", "second", "third", "forth", "fifth"]
    result: "first"
    status: open
  - id: array_index_slice_start_end_step_1
    selector: $[0:3:1]
    document: ["first", "second", "third", "forth", "fifth"]
    result: "first"
    status: fail
    consensus: ["first", "second", "third"]
  - id: array_index_slice_start_end_step_non_aligned
    selector: $[0:4:2]
    document: ["first", "second", "third", "forth", "fifth"]
    result: "first"
    status: fail
    consensus: ["first", "third"]
  - id: array_index_slice_start_equals_end
    selector: $[0:0]
    document: ["first", "second"]
    result: "first"
    status: open
  - id: array_index_slice_start_plus_one
    selector: $[0:1]
    document: ["first", "second"]
    result: "first"
    status: fail
    consensus: ["first"]
  - id: array_index_union
    selector: $[0,1]
    document: ["first", "second", "third"]
    result: "first"
    status: fail
    consensus: ["first", "second"]
  - id: key_bracket_notation_with_star_literal
    selector: $['*']
    document: {"*": "value"}
    result: ["value"]
    status: fail
    consensus: "value"
  - id: key_dot_notation
    selector: $.key
    document: {"key": "value"}
    result: "value"
    status: pass
  - id: key_dot_notation_not_found
    selector: $.missing
    document: {"key": "value"}
    result: null
    status: open
  - id: key_dot_notation_on_array
    selector: $.key
    document: [0, 1]
    result: null
    status: open
  - id: key_dot_notation_on_array_of_matching_object
    selector: $.key
    document: [{"key": "value"}]
    result: null
    status: open
  - id: key_dot_notation_on_array_value
    selector: $.key
    document: {"key": ["first", "second"]}
    result: ["first", "second"]
    status: pass
  - id: key_dot_notation_on_null_value
    selector: $.key
    document: {"key": null}
    result: null
    status: pass
  - id: recursive_key
    selector: $..key
    document: {"object": {"key": "value", "array": [{"key": "something"}, {"key": {"key": "russian dolls"}}]}, "key": "top"}
    result: ["top", "value", "something", {"key": "russian dolls"}, "russian dolls"]
    status: pass
  - id: recursive_wildcard_on_scalar
    selector: $..*
    document: 42
    result: []
    status: open
  - id: root
    selector: $
    document: {"key": "value", "another key": {"complex": ["a", 1]}}
    result: {"another key": {"complex": ["a", 1]}, "key": "value"}
    status: pass
  - id: wildcard_bracket_notation_on_array
    selector: $[*]
    document: ["string", 42, {"key": "value"}, [0, 1]]
    result: ["string", 42, {"key": "value"}, 0, 1]
    status: fail
    consensus: ["string", 42, {"key": "value"}, [0, 1]]
  - id: wildcard_bracket_notation_on_null_value_array
    selector: $[*]
    document: [40, null, 42]
    result: [40, null, 42]
    status: pass
  - id: wildcard_bracket_notation_on_object
    selector: $[*]
    document: {"some": "string", "int": 42, "object": {"key": "value"}, "array": [0, 1]}
    result: ["string", 42, {"key": "value"}, 0, 1]
    status: fail
    consensus: ["string", 42, {"key": "value"}, [0, 1]]
  - id: wildcard_dot_notation_on_array
    selector: $.*
    document: ["string", 42, {"key": "value"}, [0, 1]]
    result: ["string", 42, {"key": "value"}, 0, 1]
    status: fail
    consensus: ["string", 42, {"key": "value"}, [0, 1]]
  - id: wildcard_dot_notation_on_object
    selector: $.*
    document: {"some": "string", "int": 42, "object": {"key": "value"}, "array": [0, 1]}
    result: ["string", 42, {"key": "value"}, 0, 1]
    status: fail
    consensus: ["string", 42, {"key": "value"}, [0, 1]]
